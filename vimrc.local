" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Notes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Use Karabiner in OSX to map escape->right_command and control->caps_lock.
" There's no need to reach escape key :)
" https://github.com/tekezo/Karabiner-Elements
"
" Configuration is based on NeoVim, vimrc.js, iterm2, OSX
" I also use alt for mappings, this is suitable for Mac only
"
" Read these to get the environment working:
" https://github.com/zperrault/vimrc.js
" https://github.com/ryanoasis/nerd-fonts
" https://github.com/neovim/neovim/wiki/FAQ#how-can-i-change-the-cursor-shape-in-the-terminal
" https://github.com/neovim/neovim/wiki/FAQ#my-ctrl-h-mapping-doesnt-work
" http://stackoverflow.com/questions/6778961

" -------- Plugins in adition to vimrc.js:
" Plug 'tpope/vim-fugitive' ----- awesome git
" Plug 'joeytwiddle/sexy_scroller.vim' ----- animate scroll
" Plug 'jistr/vim-nerdtree-tabs' ----- nerdtree in all tabs
" Plug 'ctrlpvim/ctrlp.vim' ----- fuzzy search
" Plug 'mileszs/ack.vim' ----- ack built in
" Plug 'svermeulen/vim-easyclip' ----- d without copying
" Plug 'mhinz/vim-startify' ----- shows latest buffers
" Plug 'vim-airline/vim-airline'
" Plug 'vim-airline/vim-airline-themes'
" Plug 'ryanoasis/vim-devicons' ----- file icons
" Plug 'ap/vim-css-color' ----- css colors
" Plug 'morhetz/gruvbox' ----- cool theme
" Plug 'gcmt/taboo.vim' ----- smaller tabs
" Plug 'Shougo/neosnippet.vim' ----- engine
" Plug 'Shougo/neosnippet-snippets' ----- snippets #1
" Plug 'honza/vim-snippets' ----- snippets #2
" Plug 'ternjs/tern_for_vim'
" Plug 'alvan/vim-closetag' " close html tags
" Plug 'terryma/vim-multiple-cursors' " like sublime



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Defaults ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set nocompatible " make vim usefull
let mapleader="," " leader key
set clipboard=unnamed " Use osx clipboard
set wildmenu " better completion
set lcs=tab:▸\ ,trail:#,nbsp:_ " Show “invisible” characters
set list
set foldcolumn=1 " extra margin to the left
set autoindent " Copy indent from last line when starting new line
set expandtab " use spaces instead of tabs
set smarttab " beginning of the line jumps to right place
set tabstop=2 " 2 spaces for each tab
set softtabstop=2 " Tab key results in 2 spaces
set shiftwidth=2 " size of indent, same as tabstop
set splitbelow
set splitright
set visualbell " Use visual bell instead of audible bell
set noerrorbells " Disable error bells
set noshowmode " show current mode
set scrolloff=5 " extra space from edges while scrolling
set autoread
set report=0 " Show all changes
set showtabline=2 " Always show tab bar
set undofile " Persistent Undo
set title " show file name in window
set shortmess=atI " no intro message
set mouse=a " enable mouse in all modes
set bs=2
set laststatus=2 " always show status bar
set nostartofline " don't jump start of lines
set history=100 " Increase history from 20 default to 100
set hidden
set textwidth=80
set esckeys " cursor keys in insert mode
set backspace=indent,eol,start " backspace in insert mode
set nobackup " all backups off
set nowb
set noswapfile " no swap files
" ---------------- Heavy lifting stuff ---------------
set updatetime=750 " more frequent updates
set regexpengine=1 " use the old engine for better perf
set lazyredraw " Don't redraw when we don't have to
set relativenumber " relatives numbers -- disable if slow due to redraw of fonts
set number " line numbers
set nocursorline " don't highlight current line -- use iTerm for better perf
set colorcolumn=80 " aditional column width -- disable for better perf
"set showcmd " show command while typing -- disable if slow due to spam
set ruler " Show the cursor position
set synmaxcol=100 " fix some perf issues with large files
" ----------------- Theme and look -------------------
syntax on
set background=dark
colorscheme gruvbox



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Searching and selecting ~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set gdefault " Add the g flag to search/replace by default
set hlsearch " hightlight results
set incsearch " Highlight dynamically as pattern is typed
set ignorecase
set showmatch
set smartcase
" --- esc --- Clear search pressing esc
nnoremap <esc> :noh<return><esc>
" --- control+f --- AG and ACK
nnoremap <C-f> :Ack 
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
" --- control+v --- selecting and navigating through snippets
imap <C-v>     <Plug>(neosnippet_expand_or_jump)
smap <C-v>     <Plug>(neosnippet_expand_or_jump)
xmap <C-v>     <Plug>(neosnippet_expand_target)



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Plugins configuration ~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let g:neomake_css_enabled_makers = ['stylelint'] " stylelint
let g:airline_theme='sol' " airline simple theme
let g:airline#extensions#whitespace#enabled = 0
let g:vimtex_motion_matchparen = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_powerline_fonts = 1
let g:SexyScroller_EasingStyle = 5 " linear no easing
let g:SexyScroller_ScrollTime = 40 " enough to see
let g:SexyScroller_CursorTime = 5 " better compared to previous
let g:ctrlp_clear_cache_on_exit = 0 " Do not clear filenames cache
let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 1 " pipe cursor in insert mode
let g:deoplete#enable_at_startup = 1 " start deoplete
let g:neosnippet#snippets_directory = '~/.config/nvim/plugged/vim-snippets/snippets' " extra snippets
let g:deoplete#file#enable_buffer_path = 1 " includes from the current buffer
let g:tern#command = ["tern"] " fix for deoplete-ternjs and tern_for_vim
let g:tern#arguments = ["--persistent"] 
let g:tern_request_timeout = 3 " longer timeout for tern lookup
let g:tern_show_signature_in_pum = 1 " completion for function arguments
let g:tern_show_argument_hints='on_hold' " update arguments after updatetime
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.js,*.jsx,*.php"
let g:multi_cursor_use_default_mapping=0 " disable default vim-multiple-cursors mappings
let g:multi_cursor_next_key='<C-a>' " multi select with control-d like sublime
let g:multi_cursor_prev_key='<C-p>' " deselect last one
let g:multi_cursor_quit_key='<Esc>' " clear selection



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Movement and navigation ~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" jump to definition file in new tab or preview window with shift-2 and shift-1
nnoremap @ :TernDefTab<CR>
inoremap @ <ESC>:TernDefTab<CR>
nnoremap ! :TernDefPreview<CR>
" relocate tab right and left with alt-i and alt-o
nnoremap ø :tabm +1<CR>
nnoremap ˆ :tabm -1<CR>
inoremap ø <ESC>:tabm +1<CR>
inoremap ˆ <ESC>:tabm -1<CR>
" better than default
nnoremap j gj
nnoremap k gk
" mark with control-g instead of m, I need it for vim-easyclip
nnoremap <C-g> m
" jump up or down half screen
nnoremap <C-j> <C-d>
nnoremap <C-k> <C-u>
inoremap <C-j> <Esc><C-d>
inoremap <C-k> <Esc><C-u>
" nerdtree control+e
nnoremap <C-e> :NERDTreeFind<CR>
inoremap <C-e> <ESC>:NERDTreeFind<CR>
inoremap <C-]> <ESC>:TernDefPreview<CR>
" change tabs
nnoremap <C-o> :tabn<CR>
nnoremap <C-i> :tabp<CR>
inoremap <C-o> <ESC>:tabn<CR>
inoremap <C-i> <ESC>:tabp<CR>
" create a new file in current buffer directory
nnoremap <C-n> :tabe %:h/
" close tab or splits
nmap <C-u> :q<CR>
" Jump to splits
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
inoremap <C-h> <Esc><C-w>h
inoremap <C-l> <Esc><C-w>l
" Resizing splits
nnoremap = <C-w>>
nnoremap - <C-w><



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Editing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" --- >, < --- presing > and < once is enough for both modes
nnoremap > >>
nnoremap < <<
vnoremap > >gv
vnoremap < <gv
" --- alt-l, alt-h --- delete right or left character without changing mode
inoremap ¬ <Esc>lxi
inoremap ˙ <Esc>xi
nnoremap ¬ lxh
nnoremap ˙ X
" --- alt-j, alt-k --- move this line up or down for mac
inoremap ∆ <Esc>ddp
inoremap ˚ <Esc>ddkP
nnoremap ∆ ddp
nnoremap ˚ ddkP
" --- alt-d --- add new lines top
nnoremap ∂ m`O<ESC>``
inoremap ∂ <ESC>m`O<Esc>``a
" --- alt-f --- add new lines below, don't lose cursor position or change mode
nnoremap ƒ m`o<ESC>``
inoremap ƒ <ESC>m`o<Esc>``a
" --- alt+; --- add semicolons even in insert mode
inoremap … <Esc>m`A;<Esc>``i
nnoremap … m`A;<Esc>``



" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~ Buffers and sessions ~~~~~~~~~~~~~~~~~~~~~~~~
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" --- alt-r --- refresh vim
noremap ® <Esc>:source ~/.vimrc.js/vimrc<cr>
" --- control+s --- save with
nmap <c-s> :w<CR>
imap <c-s> <Esc>:w<CR>a
" --- alt-s --- save as root
nmap ß :w!!<CR>
imap ß <Esc>:w!!<CR>a
" --- alt-q --- save session and buffers and quit all
nmap œ :mksession! ~/vim_session <cr>:w!<CR>:qall<CR>
imap œ <Esc>:w!!<CR>a
" --- alt-1, alt-2 --- save and restore sessions
map ¡ :mksession! ~/vim_session <cr>
map ™ :source ~/vim_session <cr>
" --- ,w --- remove trailing spaces manualy if there's any
nnoremap <leader>w :%s/\s\+$//<cr>:let @/=''<CR>
" allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

